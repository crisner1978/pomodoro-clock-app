{"version":3,"sources":["AppElements.js","toolkit/timeSlice.js","components/Break.jsx","components/Session.jsx","components/StartButton.jsx","components/ResetButton.jsx","components/Timer.jsx","App.js","toolkit/store.js","index.js"],"names":["Container","styled","div","Wrapper","initialState","breakTime","sessionTime","interval","timeLeft","timerOn","audioElement","timeSlice","createSlice","name","reducers","addBreak","state","action","minusBreak","addSession","minusSession","stopTimer","startTimer","resetTimer","switchBreak","switchSession","decrementTime","actions","selectSession","time","selectBreak","Break","useSelector","dispatch","useDispatch","id","ButtonWrapper","className","onClick","Session","BtnWrapper","StartButton","useState","color","setColor","on","Button","style","backgroundColor","button","ResetButton","momentDurationFormatSetup","moment","Timer","type","useRef","formatTime","duration","format","trim","useEffect","countdown","setInterval","current","play","clearInterval","load","ref","src","App","store","configureStore","reducer","timeReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74498a6d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background: #eb5757;\n  background: -webkit-linear-gradient(to bottom, #000000, #eb5757);\n  background: linear-gradient(to bottom, #000000, #eb5757);\n  background-size: cover;\n  margin: 0 auto;\n  padding: 0;\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-repeat: no-repeat;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 6rem;\n\n  @media only screen and (max-width: 768px) {\n    grid-gap: 4rem;\n  }\n\n  @media only screen and (max-width: 480px) {\n    grid-gap: 2rem;\n  }\n`;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {\n  breakTime: 5,\n  sessionTime: 25,\n  interval: \"Session\",\n  timeLeft: 25 * 60,\n  timerOn: false,\n  audioElement: null,\n};\n\nconst timeSlice = createSlice({\n  name: \"time\",\n  initialState,\n\n  reducers: {\n    addBreak(state, action) {\n      if (state.breakTime > 0 && state.breakTime < 60) state.breakTime += 1;\n    },\n    minusBreak(state, action) {\n      if (state.breakTime > 1 && state.breakTime <= 60) state.breakTime -= 1;\n    },\n    addSession(state, action) {\n      const timeLeft = state.sessionTime < 60 ? state.sessionTime += 1 : state.sessionTime;\n      state.timeLeft = timeLeft * 60;\n    },\n    minusSession(state, action) {\n      const timeLeft = state.sessionTime > 1 ? state.sessionTime -= 1 : state.sessionTime;\n      state.timeLeft = timeLeft * 60;\n\n    },\n    stopTimer(state, action) {\n      state.timerOn = false;\n    },\n    startTimer(state, action) {\n      state.timerOn = true;\n    },\n    resetTimer: () => initialState,\n\n    switchBreak(state, action) {\n      state.interval = \"Break\";\n      state.timeLeft = state.breakTime * 60;\n    },\n    switchSession(state, action) {\n      state.interval = \"Session\";\n      state.timeLeft = state.sessionTime * 60;\n    },\n    decrementTime(state, action) {\n      state.timeLeft -= 1;\n    },\n  },\n});\n\nexport const {\n  addBreak,\n  minusBreak,\n  addSession,\n  minusSession,\n  startTimer,\n  stopTimer,\n  resetTimer,\n  decrementTime,\n  switchBreak,\n  switchSession,\n} = timeSlice.actions;\n\nexport const selectSession = (state) => state.time.sessionTime;\nexport const selectBreak = (state) => state.time.breakTime;\nexport const timeLeft = (state) => state.time.timeLeft;\nexport const interval = (state) => state.time.interval;\nexport const timerOn = (state) => state.time.timerOn;\n\nexport default timeSlice.reducer;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { addBreak, minusBreak, selectBreak } from \"../toolkit/timeSlice\";\nimport { FaMinusSquare, FaPlusSquare } from \"react-icons/fa\";\n\nconst Break = () => {\n  const breakTime = useSelector(selectBreak);\n  const dispatch = useDispatch();\n\n  return (\n    <Container id=\"break-label\">\n      <h1>Break Time</h1>\n      <ButtonWrapper>\n        <div id=\"break-decrement\">\n          <FaMinusSquare\n            className=\"minus\"\n            onClick={() => dispatch(minusBreak())}\n          />\n        </div>\n        <h2 id=\"break-length\">{breakTime}</h2>\n        <div id=\"break-increment\">\n          <FaPlusSquare className=\"plus\" onClick={() => dispatch(addBreak())} />\n        </div>\n      </ButtonWrapper>\n    </Container>\n  );\n};\n\nexport default Break;\n\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  h1 {\n    font-size: 1.5rem;\n    background: linear-gradient(to top, #eef2f3, #8e9eab);\n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n\n    @media only screen and (max-width: 768px) {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  margin-top: -1rem;\n  padding: 0;\n  color: #fff;\n\n  h2 {\n    font-size: 2rem;\n    @media only screen and (max-width: 768px) {\n      font-size: 1.5rem;\n    }\n  }\n\n  svg {\n    font-size: 2rem;\n    cursor: pointer;\n\n    @media only screen and (max-width: 768px) {\n      font-size: 1.5rem;\n      \n    }\n  }\n\n  .plus {\n    background-color: #00ab66;\n    outline: none;\n  }\n  .minus {\n    background-color: #a40000;\n  }\n`;\n","import { FaPlusSquare, FaMinusSquare } from \"react-icons/fa\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { addSession, minusSession, selectSession } from \"../toolkit/timeSlice\";\n\nconst Session = () => {\n  const sessionTime = useSelector(selectSession);\n  const dispatch = useDispatch();\n\n  return (\n    <Container id=\"session-label\">\n      <h1>Session Time</h1>\n      <BtnWrapper>\n        <div id=\"session-decrement\">\n          <FaMinusSquare\n            className=\"minus\"\n            onClick={() => dispatch(minusSession())}\n          />\n        </div>\n        <h2 id=\"session-length\">{sessionTime}</h2>\n        <div id=\"session-increment\">\n          <FaPlusSquare\n            className=\"plus\"\n            onClick={() => dispatch(addSession())}\n          />\n        </div>\n      </BtnWrapper>\n    </Container>\n  );\n};\n\nexport default Session;\n\n\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  h1 {\n    font-size: 1.5rem;\n    background: linear-gradient(to top, #eef2f3, #8e9eab);\n    -webkit-text-fill-color: transparent;\n    -webkit-background-clip: text;\n    background-clip: text;\n\n    @media only screen and (max-width: 768px) {\n      font-size: 1rem;\n    }\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  margin-top: -1rem;\n  padding: 0;\n  color: #fff;\n\n  h2 {\n    font-size: 2rem;\n    @media only screen and (max-width: 768px) {\n      font-size: 1.5rem;\n    }\n  }\n\n  svg {\n    font-size: 2rem;\n    cursor: pointer;\n\n    @media only screen and (max-width: 768px) {\n      font-size: 1.5rem;\n    }\n  }\n\n  .plus {\n    background-color: #00ab66;\n    outline: none;\n  }\n  .minus {\n    background-color: #a40000;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { stopTimer, startTimer, timerOn } from \"../toolkit/timeSlice\";\n\nconst StartButton = () => {\n  const [color, setColor] = useState(\"\");\n\n  const on = useSelector(timerOn);\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    on ? dispatch(stopTimer()) : dispatch(startTimer());\n    setColor(!color);\n  };\n\n  return (\n    <Button\n      style={{ backgroundColor: color ? \"#A40000\" : \"#00AB66\" }}\n      id=\"start_stop\"\n      onClick={onClick}\n    >\n      {on ? \"STOP\" : \"START\"}\n    </Button>\n  );\n};\n\nexport default StartButton;\n\n\n\nconst Button = styled.button`\n  display: block;\n  font-family: \"Zen Dots\", cursive;\n  border-radius: 10px;\n  width: 150px;\n  height: 50px;\n  color: #fff;\n  border: none;\n  font-size: 20px;\n  transition: 0.3s ease-in all;\n  cursor: pointer;\n\n  &:hover {\n    background: transparent;\n    transition: ease-in 0.3s all;\n    transform: scale(1.05);\n  }\n  &:active {\n    transform: scale(0.95);\n    transition: 0.3s ease-in all;\n    box-shadow: 3px 2px 22px 1px rgba(0, 0, 0, 0.24);\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: 125px;\n    height: 40px;\n    font-size: 16px;\n  }\n\n  @media only screen and (max-width: 480px) {\n    width: 100px;\n    height: 35px;\n    font-size: 14px;\n  }\n`;\n","import { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { resetTimer } from \"../toolkit/timeSlice\";\n\nconst ResetButton = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Button className=\"btn\" id=\"reset\" onClick={() => dispatch(resetTimer())}>\n      RESET\n    </Button>\n  );\n};\n\nexport default ResetButton;\n\n\n\nconst Button = styled.button`\n  display: block;\n  font-family: \"Zen Dots\", cursive;\n  border-radius: 10px;\n  width: 150px;\n  height: 50px;\n  background-color: transparent;\n  color: #a40000;\n  border: 3px solid #a40000;\n  font-size: 20px;\n  transition: 0.3s ease-in all;\n  cursor: pointer;\n\n  &:hover {\n    background: transparent;\n    border: 3px solid #a40000;\n    transition: ease-in 0.3s all;\n    transform: scale(1.05);\n  }\n  &:active {\n    transform: scale(0.95);\n    transition: 0.3s ease-in all;\n    box-shadow: 3px 2px 22px 1px rgba(0, 0, 0, 0.24);\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: 125px;\n    height: 40px;\n    font-size: 16px;\n  }\n\n  @media only screen and (max-width: 480px) {\n    width: 100px;\n    height: 35px;\n    font-size: 14px;\n  }\n`;\n","import React, { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  decrementTime,\n  interval,\n  switchBreak,\n  switchSession,\n  timeLeft,\n  timerOn,\n} from \"../toolkit/timeSlice\";\nimport moment from \"moment\";\nimport momentDurationFormatSetup from \"moment-duration-format\";\nimport StartButton from \"./StartButton\";\nimport ResetButton from \"./ResetButton\";\nimport styled from \"styled-components\";\n\nmomentDurationFormatSetup(moment);\nconst Timer = () => {\n  const time = useSelector(timeLeft);\n  const on = useSelector(timerOn);\n  const type = useSelector(interval);\n  const dispatch = useDispatch();\n  const audioElement = useRef(null);\n\n  const formatTime = moment\n    .duration(time, \"s\")\n    .format(\"mm:ss\", { trim: false });\n\n  useEffect(() => {\n    let countdown = null;\n    if (on && time > 0) {\n      countdown = setInterval(() => {\n        dispatch(decrementTime());\n      }, 1000);\n    } else if (on && time === 0) {\n      countdown = setInterval(() => {\n        dispatch(decrementTime());\n      }, 1000);\n      audioElement.current.play();\n      if (type === \"Session\") {\n        dispatch(switchBreak());\n      } else if (type === \"Break\") {\n        dispatch(switchSession());\n      }\n    } else {\n      clearInterval(countdown);\n      audioElement.current.load();\n    }\n    return () => clearInterval(countdown);\n  }, [type, time, on, dispatch, audioElement]);\n\n  return (\n    <Container>\n      <h2 id=\"timer-label\">{type}</h2>\n      <h1 id=\"time-left\">{formatTime}</h1>\n      <ButtonWrapper>\n        <StartButton />\n        <ResetButton />\n      </ButtonWrapper>\n      <audio ref={audioElement} id=\"beep\">\n        <source\n          src=\"https://onlineclock.net/audio/options/default.mp3\"\n          type=\"audio/mpeg\"\n        />\n      </audio>\n    </Container>\n  );\n};\n\nexport default Timer;\n\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border: 2px solid black;\n  max-width: 500px;\n  max-height: 500px;\n  width: 100%;\n  height: 100%;\n  background: #8e9eab;\n  background: -webkit-linear-gradient(to bottom, #eef2f3, #8e9eab);\n  background: linear-gradient(to bottom, #eef2f3, #8e9eab);\n  border-radius: 50%;\n\n  @media only screen and (max-width: 768px) {\n    max-width: 450px;\n    max-height: 450px;\n    width: 100%;\n    height: 100%;\n    margin-right: auto;\n    margin-left: auto;\n\n    @media only screen and (max-width: 480px) {\n      max-width: 320px;\n      max-height: 320px;\n      width: 95%;\n      height: 95%;\n    }\n  }\n  h2 {\n    font-size: 30px;\n    text-transform: uppercase;\n    text-shadow: -5px 5px 8px rgba(0, 0, 0, 0.6);\n    @media only screen and (max-width: 768px) {\n      font-size: 20px;\n    }\n  }\n  h1 {\n    font-size: 75px;\n    @media only screen and (max-width: 768px) {\n      font-size: 50px;\n    }\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n`;\n","import \"./App.css\";\nimport { Container, Wrapper } from \"./AppElements\";\nimport Break from \"./components/Break\";\nimport Session from \"./components/Session\";\nimport Timer from \"./components/Timer\";\n\nfunction App() {\n  return (\n    <Container>\n      <Timer />\n      <Wrapper>\n        <Session />\n        <Break />\n      </Wrapper>\n    </Container>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport timeReducer from \"./timeSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    time: timeReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from './toolkit/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}