{"version":3,"sources":["toolkit/timeSlice.js","components/Break.jsx","components/Session.jsx","components/StartButton.jsx","components/ResetButton.jsx","components/Timer.jsx","App.js","toolkit/store.js","index.js"],"names":["initialState","breakTime","sessionTime","interval","timeLeft","timerOn","audioElement","timeSlice","createSlice","name","reducers","addBreak","state","action","minusBreak","addSession","minusSession","stopTimer","startTimer","resetTimer","switchBreak","switchSession","decrementTime","actions","selectSession","time","selectBreak","Break","useSelector","dispatch","useDispatch","id","className","onClick","Session","StartButton","on","ResetButton","momentDurationFormatSetup","moment","Timer","type","useRef","formatTime","duration","format","trim","useEffect","countdown","setInterval","current","play","clearInterval","load","ref","src","App","store","configureStore","reducer","timeReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d912118.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {\n  breakTime: 5,\n  sessionTime: 25,\n  interval: \"Session\",\n  timeLeft: 25 * 60,\n  timerOn: false,\n  audioElement: null,\n};\n\nconst timeSlice = createSlice({\n  name: \"time\",\n  initialState,\n\n  reducers: {\n    addBreak(state, action) {\n      if (state.breakTime > 0 && state.breakTime < 60) state.breakTime += 1;\n    },\n    minusBreak(state, action) {\n      if (state.breakTime > 1 && state.breakTime <= 60) state.breakTime -= 1;\n    },\n    addSession(state, action) {\n      const timeLeft = state.sessionTime < 60 ? state.sessionTime += 1 : state.sessionTime;\n      state.timeLeft = timeLeft * 60;\n    },\n    minusSession(state, action) {\n      const timeLeft = state.sessionTime > 1 ? state.sessionTime -= 1 : state.sessionTime;\n      state.timeLeft = timeLeft * 60;\n\n    },\n    stopTimer(state, action) {\n      state.timerOn = false;\n    },\n    startTimer(state, action) {\n      state.timerOn = true;\n    },\n    resetTimer: () => initialState,\n\n    switchBreak(state, action) {\n      state.interval = \"Break\";\n      state.timeLeft = state.breakTime * 60;\n    },\n    switchSession(state, action) {\n      state.interval = \"Session\";\n      state.timeLeft = state.sessionTime * 60;\n    },\n    decrementTime(state, action) {\n      state.timeLeft -= 1;\n    },\n  },\n});\n\nexport const {\n  addBreak,\n  minusBreak,\n  addSession,\n  minusSession,\n  startTimer,\n  stopTimer,\n  resetTimer,\n  decrementTime,\n  switchBreak,\n  switchSession,\n} = timeSlice.actions;\n\nexport const selectSession = (state) => state.time.sessionTime;\nexport const selectBreak = (state) => state.time.breakTime;\nexport const timeLeft = (state) => state.time.timeLeft;\nexport const interval = (state) => state.time.interval;\nexport const timerOn = (state) => state.time.timerOn;\n\nexport default timeSlice.reducer;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addBreak, minusBreak, selectBreak } from '../toolkit/timeSlice';\n\nconst Break = () => {\n    const breakTime = useSelector(selectBreak);\n    const dispatch = useDispatch();\n\n    return (\n        <div id=\"break-label\">\n            <h1>Break Length</h1>\n            <div className=\"break-time\">\n            <button id=\"break-decrement\" onClick={()=> dispatch(minusBreak())} > - </button>\n            <h1 id=\"break-length\">{breakTime}</h1>\n            <button id=\"break-increment\" onClick={()=> dispatch(addBreak())} > + </button>\n            </div>            \n        </div>\n    )\n}\n\n\n\nexport default Break\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addSession, minusSession, selectSession } from '../toolkit/timeSlice';\n\nconst Session = () => {\n    const sessionTime = useSelector(selectSession);\n    const dispatch = useDispatch();\n\n    return (\n        <div id=\"session-label\">\n            <h1>Session Length</h1>\n            <div className=\"session-time\">\n            <button id=\"session-decrement\" onClick={()=> dispatch(minusSession())} > - </button>\n            <h1 id=\"session-length\">{sessionTime}</h1>\n            <button id=\"session-increment\" onClick={()=> dispatch(addSession())} > + </button>\n            </div>            \n        </div>\n    )\n}\n\n\n\nexport default Session\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { stopTimer, startTimer, timerOn } from \"../toolkit/timeSlice\";\n\nconst StartButton = () => {\n  \n  const on = useSelector(timerOn);\n  const dispatch = useDispatch();\n\n  const onClick = () => {\n    on ? dispatch(stopTimer()) : dispatch(startTimer());\n  };\n\n  return (\n    <button className=\"btn\" id=\"start_stop\" onClick={onClick}>\n      {on ? \"Stop\" : \"Start\"}\n    </button>\n  );\n};\n\nexport default StartButton;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { resetTimer } from \"../toolkit/timeSlice\";\n\nconst ResetButton = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <button className=\"btn\" id=\"reset\" onClick={() => dispatch(resetTimer())}>\n      Reset\n    </button>\n  );\n};\n\nexport default ResetButton;\n","import React, { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  decrementTime,\n  interval,\n  switchBreak,\n  switchSession,\n  timeLeft,\n  timerOn,\n} from \"../toolkit/timeSlice\";\nimport moment from \"moment\";\nimport momentDurationFormatSetup from \"moment-duration-format\";\nimport StartButton from \"./StartButton\";\nimport ResetButton from \"./ResetButton\";\n\nmomentDurationFormatSetup(moment);\nconst Timer = () => {\n\n  const time = useSelector(timeLeft);\n  const on = useSelector(timerOn);\n  const type = useSelector(interval);\n  const dispatch = useDispatch();\n  const audioElement = useRef(null);\n\n  const formatTime = moment\n    .duration(time, \"s\")\n    .format(\"mm:ss\", { trim: false });\n\n  useEffect(() => {\n    let countdown = null;\n    if (on && time > 0) {\n      countdown = setInterval(() => {\n        dispatch(decrementTime());\n      }, 1000);\n    } else if (on && time === 0) {\n      countdown = setInterval(() => {\n        dispatch(decrementTime());\n      }, 1000);\n      audioElement.current.play();\n      if (type === \"Session\") {\n        dispatch(switchBreak());\n      } else if (type === \"Break\") {\n        dispatch(switchSession());\n      }\n    } else {\n      clearInterval(countdown);\n      audioElement.current.load();\n    }\n    return () => clearInterval(countdown);\n  }, [type, time, on, dispatch, audioElement]);\n\n  return (\n    <div className=\"timer\">\n      <h1 id=\"timer-label\">{type}</h1>\n      <h1 id=\"time-left\">{formatTime}</h1>\n      <StartButton />\n      <ResetButton />\n      <audio ref={audioElement} id=\"beep\">\n        <source src=\"https://onlineclock.net/audio/options/default.mp3\"\n                type=\"audio/mpeg\" />\n      </audio>\n    </div>\n  );\n};\n\nexport default Timer;\n","// import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Break from \"./components/Break\";\nimport Session from \"./components/Session\";\nimport Timer from \"./components/Timer\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <div className=\"timers\">\n        <Break />\n        <Session />\n      </div>\n      <Timer />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport timeReducer from \"./timeSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    time: timeReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from './toolkit/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}